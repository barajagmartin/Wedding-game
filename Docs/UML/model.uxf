<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="12.0">
  <zoom_level>10</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>330</x>
      <y>10</y>
      <w>350</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>model::Item
--
-pos: Position
-isPickedUp: boolean
+isDelivered: boolean
+WIDTH = 15: int
+HEIGHT = 15: int
+CANDY_NUMBER: int
--
+Item(final int x, final int y, final int candyNumber): ctor
+Item(final Position pos, final int candyNumber): ctor
+getX(): int
+getY(): int
+setX(int x): void
+setY(int y): void
+isPickedUp(): boolean
+setPickedUp(boolean isPickedUp): void
+isDelivered(): boolean
+setDelivered(boolean isDelivered): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>970</x>
      <y>650</y>
      <w>390</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::StatusBar
--
+HEART_POSX = { 50, 125, 200 }: float[]
+HEART_POSY = Game.WINDOW_HEIGHT - 80: float
+FIXED_BAR_WIDTH = 550: float
+FIXED_BAR_HEIGHT = 50: float
+FIXED_BAR_POSX = Game.WINDOW_WIDTH - 580: float
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1000</x>
      <y>10</y>
      <w>410</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>model::CandyMonster
--
+CANDY_NUMBER: int
-pos: Position
+WIDTH = 25: int
+HEIGHT = 30: int
--
+CandyMonster(int x, int y, int candyNumber): ctor
+CandyMonster(final Position pos, final int candyNumber): ctor
+getX(): int
+getY(): int
+setX(final int x): void
+setY(final int y): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1080</x>
      <y>430</y>
      <w>170</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model::Position
--
-x: int
-y: int
--
+Position(int x, int y): ctor
+getX(): int
+setX(int x): void
+getY(): int
+setY(int y): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>10</x>
      <y>650</y>
      <w>350</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>model::World
--
-blockMap: BlockMap
-worldWidth: int
-worldHeight: int
--
+World(final int worldWidth, final int worldHeight): ctor
+getWorldWidthPx(): int
+getWorldHeightPx(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>340</x>
      <y>820</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>model::BlockMap
--
-blockList: ArrayList&lt;FixedPosition&gt;
--
+BlockMap(): ctor
+getBlockList(): ArrayList&lt;FixedPosition&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>690</x>
      <y>10</y>
      <w>300</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>model::InGame
--
-player: Player
-levelTime: float
-time: float
-isNewGame = true: boolean
--
+InGame(Player player): ctor
+getTime(): float
+setTime(float time): void
+getPlayer(): Player
+getLevelTime(): float
+setLevelTime(float levelTime): void
+randomizeVersion(int nbrOfVersions): int
+isNewGame(): boolean
+setNewGame(final boolean newGame): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>550</x>
      <y>650</y>
      <w>230</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::Spikes
--
-pos: Position
+RADIUS = 15: int
--
+Spikes(final int x, final int y): ctor
+Spikes(final Position pos): ctor
+getPos(): Position
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>10</x>
      <y>10</y>
      <w>310</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>model::Character
--
+RADIUS = 25: int
-pos: Position
-life: int
-heldItem: Item
-timeSinceHit: float
-isOnSpikes: boolean
--
+Character(final int x, final int y): ctor
+Character(final Position pos): ctor
+getX(): int
+getY(): int
+getPos(): Position
+setX(final int x): void
+setY(final int y): void
+getTimeSinceHit(): float
+setTimeSinceHit(float timeSinceHit): void
+getHeldItem(): Item
+pickUpItem(Item item): void
+dropDownItem(Item item): void
+isOnSpikes(): boolean
+setOnSpikes(boolean isOnSpikes): void
+isHoldingItem(ArrayList&lt;Item&gt; items): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>800</x>
      <y>430</y>
      <w>270</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>model::MoveableBox
--
+HALF_WIDTH = 16: int
+HALF_HEIGHT = 16: int
-pos: Position
--
+MoveableBox(final int x, final int y): ctor
+MoveableBox(final Position pos): ctor
+getPos(): Position
+setX(final int x): void
+setY(final int y): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>580</x>
      <y>430</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>model::Game
--
+START_MENU = 0: int
+IN_GAME = 1: int
+HIGHSCORE = 2: int
+PAUSE_MENU = 3: int
+END_OF_LEVEL = 4: int
+NEW_HIGHSCORE = 5: int
+WINDOW_WIDTH = 1024: int
+WINDOW_HEIGHT = 768: int
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>10</x>
      <y>820</y>
      <w>320</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>model::FixedPosition
--
-pos: Position
--
+FixedPosition(final int posX, final int posY): ctor
+getPosX(): int
+getPosY(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>370</x>
      <y>650</y>
      <w>170</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::PauseMenu
--
-isMarked: int
--
+PauseMenu(): ctor
+markButtonDown(): void
+markButtonUp(): void
+getIsMarked(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>300</x>
      <y>430</y>
      <w>270</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>/model::AbstractMenu/
--
-isSoundOn = true: boolean
-isMusicOn = true: boolean
--
+markButtonDown(): void
+markButtonUp(): void
+setSoundOn(boolean isSoundOn): void
+isSoundOn(): boolean
+setMusicOn(boolean isMusicOn): void
+isMusicOn(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>790</x>
      <y>650</y>
      <w>170</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>model::StartMenu
--
-isMarked: int
--
+StartMenu(): ctor
+markButtonDown(): void
+markButtonUp(): void
+getIsMarked(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>10</x>
      <y>430</y>
      <w>280</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>model::Player
--
-score: int
-life: int
--
+Player(): ctor
+getScore(): int
+getLife(): int
+loseOneLife(): void
+setScore(int time, int candy, int life): void
+setScore(int time, int candy): void
+reset(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
